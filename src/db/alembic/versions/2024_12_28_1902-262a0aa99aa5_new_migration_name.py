"""new_migration_name

Revision ID: 262a0aa99aa5
Revises: 6854fd2e50de
Create Date: 2024-12-28 19:02:06.672727

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '262a0aa99aa5'
down_revision: Union[str, None] = '6854fd2e50de'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('lamp', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False))
    op.alter_column('lamp', 'price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.DECIMAL(precision=50, scale=2),
               existing_nullable=False)
    op.alter_column('lamp', 'shape',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('lamp', 'base',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('lamp', 'temperature',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('lamp', 'create_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.add_column('manufacturer', sa.Column('name', sa.String(length=200), nullable=False))
    op.add_column('manufacturer', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False))
    op.alter_column('manufacturer', 'country',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=200),
               existing_nullable=False)
    op.alter_column('manufacturer', 'create_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('manufacturer_manufacturer_key', 'manufacturer', type_='unique')
    op.create_unique_constraint(None, 'manufacturer', ['name'])
    op.drop_column('manufacturer', 'manufacturer')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('manufacturer', sa.Column('manufacturer', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'manufacturer', type_='unique')
    op.create_unique_constraint('manufacturer_manufacturer_key', 'manufacturer', ['manufacturer'])
    op.alter_column('manufacturer', 'create_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('manufacturer', 'country',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.drop_column('manufacturer', 'updated_at')
    op.drop_column('manufacturer', 'name')
    op.alter_column('lamp', 'create_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('lamp', 'temperature',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.alter_column('lamp', 'base',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.alter_column('lamp', 'shape',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.alter_column('lamp', 'price',
               existing_type=sa.DECIMAL(precision=50, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.drop_column('lamp', 'updated_at')
    # ### end Alembic commands ###
